name: Build & Deploy FE

on:
  workflow_dispatch:
  push:
    branches: [dev]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node  
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Npm Install
        run: npm ci --force
        
      - name: Build project
        run: npm run build-myapp  # this should be in the scripts in package.json  && before the script, the block should be added in angular.json

      - name: AWS Login
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: myrepo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Build and push fe image"        
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:fe.$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:fe.latest -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:fe.$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:fe.latest
          echo "feimage=$ECR_REGISTRY/$ECR_REPOSITORY:fe.$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Copy Updated File To Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SERVER_KEY }}
          port: 22
          overwrite: true
          source: "docker-compose.yml"
          target: "myapp/"

      - name: Rollout New Version
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SERVER_KEY }}
          port: 22
          command_timeout: 30m
          script: |
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | sudo docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            cd myapp
            sed -i 's#FE_IMAGE=.*#FE_IMAGE=${{ steps.build-image.outputs.feimage }}#' .env
            sudo docker compose -f docker-compose.yml pull 
            sudo docker compose -f docker-compose.yml up -d --force-recreate --no-deps 
            for i in {1..10}; do sudo docker system prune -af && break || sleep 5; done
