{
  "name": "MOM - Complex One",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Meeting Transcription Analysis",
        "formDescription": "Upload a meeting transcription file (.txt) to automatically generate a summary, extract concerns, and identify action items.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "meeting_transcription",
              "fieldType": "file",
              "acceptFileTypes": ".txt",
              "requiredField": true
            },
            {
              "fieldLabel": "meeting_title",
              "placeholder": "Enter meeting title (optional)"
            },
            {
              "fieldLabel": "recipient_email",
              "fieldType": "email",
              "placeholder": "Email address to send results",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -320,
        976
      ],
      "id": "4ac56b97-d56a-46a9-a8f8-4e8019f7582f",
      "name": "On Form Submission",
      "webhookId": "meeting-transcription-form"
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "binaryPropertyName": "meeting_transcription",
        "destinationKey": "transcription_text",
        "options": {
          "keepSource": "both"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -16,
        960
      ],
      "id": "ea03040d-71f8-497e-afd7-608c44e81a8f",
      "name": "Extract Transcription",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operationMode": "nodeInputBinary",
        "chunkSize": 2400,
        "options": {
          "batching": {
            "batchSize": 5
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2.1,
      "position": [
        784,
        448
      ],
      "id": "c1107e99-f0ea-48a8-a6f6-405706949566",
      "name": "Generate Summary",
      "alwaysOutputData": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "maxOutputTokens": 4096
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        592,
        784
      ],
      "id": "22c888ed-51b0-43f9-95bc-4e64dc3dc166",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "cwMXjKM5bWZ7qM8P",
          "name": "Google Gemini(PaLM) Api account 2"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1536,
        816
      ],
      "id": "5355ef5d-9101-4f96-a986-230794acf5c3",
      "name": "Merge Results",
      "executeOnce": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Get input data from n8n\nconst inputData = $input.all();\n\n// Initialize the result structure\nconst result = {\n    meeting_title: $('On Form Submission').first().json.meeting_title || \"Meeting Analysis Results\",\n    recipient_email: $('On Form Submission').first().json.recipient_email,\n    timestamp: new Date().toISOString(),\n    summary: \"\",\n    concerns: {},\n    action_items: {},\n    processing_status: {\n        summary_success: false,\n        concerns_success: false,\n        action_items_success: false\n    }\n};\n\n\n// Process each item in the input data\nfor (const item of inputData) {\n    \n    // Get the output object\n    let output = item?.output || item?.json?.output || item?.json || item;\n    \n    // Extract summary\n    if (output?.text) {\n        result.summary = output.text;\n        result.processing_status.summary_success = true;\n    }\n\n    // Extract concerns\n    if (output?.concerns) {\n        result.concerns = output.concerns;\n        result.processing_status.concerns_success = true;\n    }\n    \n    if (output?.action_items) {\n        result.action_items = output.action_items;\n        result.processing_status.action_items_success = true;\n    }\n    \n    // Don't break - continue processing other items for summary/concerns\n}\n\nreturn [result];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1696,
        832
      ],
      "id": "aa5730b0-0ec4-430c-99e8-2aef7e4d26ff",
      "name": "Structure Final Data",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "sendTo": "={{ $json.recipient_email }}",
        "subject": "=Meeting Analysis: {{ $json.meeting_title }}",
        "message": "=<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <style>\n        body { \n            font-family: Arial, sans-serif; \n            line-height: 1.5; \n            color: #333; \n            margin: 0;\n            padding: 20px;\n            background-color: #ffffff;\n        }\n        .email-container {\n            max-width: 700px;\n            margin: 0 auto;\n        }\n        .header { \n            border-bottom: 2px solid #e9ecef;\n            padding-bottom: 15px;\n            margin-bottom: 25px;\n        }\n        .header h2 {\n            margin: 0 0 10px 0;\n            color: #2c3e50;\n            font-size: 22px;\n        }\n        .meeting-info {\n            color: #6c757d;\n            font-size: 14px;\n        }\n        .greeting {\n            margin-bottom: 25px;\n            line-height: 1.6;\n        }\n        .section { \n            margin-bottom: 30px; \n        }\n        .section-title { \n            color: #2c3e50; \n            font-size: 16px; \n            font-weight: bold; \n            margin-bottom: 15px; \n            border-bottom: 1px solid #dee2e6; \n            padding-bottom: 5px;\n        }\n        .summary-box {\n            background-color: #f8f9fa;\n            padding: 20px;\n            border-left: 3px solid #007bff;\n            margin-bottom: 20px;\n        }\n        .concern-item { \n            background-color: #fff3cd; \n            padding: 15px; \n            margin: 10px 0; \n            border-left: 3px solid #ffc107; \n        }\n        .concern-item h4 {\n            margin: 0 0 10px 0;\n            font-size: 15px;\n            color: #856404;\n        }\n        .action-item { \n            background-color: #d1ecf1; \n            padding: 15px; \n            margin: 15px 0; \n            border-left: 3px solid #17a2b8; \n        }\n        .action-item.high-priority { \n            border-left-color: #dc3545; \n            background-color: #f8d7da; \n        }\n        .action-item h4 {\n            margin: 0 0 8px 0;\n            font-size: 15px;\n            color: #0c5460;\n        }\n        .action-item.high-priority h4 {\n            color: #721c24;\n        }\n        .assignee { \n            font-weight: bold; \n            color: #28a745; \n        }\n        .deadline { \n            color: #dc3545; \n            font-weight: bold;\n        }\n        .priority {\n            font-weight: bold;\n            text-transform: uppercase;\n            font-size: 12px;\n        }\n        .follow-up {\n            background-color: #e2e3e5;\n            padding: 15px;\n            border-left: 3px solid #6c757d;\n            margin: 15px 0;\n        }\n        .follow-up h4 {\n            margin: 0 0 8px 0;\n            font-size: 15px;\n            color: #495057;\n        }\n        ul { \n            margin: 8px 0;\n            padding-left: 20px;\n        }\n        li {\n            margin-bottom: 5px;\n        }\n        .signature {\n            margin-top: 40px;\n            padding-top: 20px;\n            border-top: 1px solid #dee2e6;\n        }\n        .footer {\n            margin-top: 30px;\n            padding-top: 15px;\n            border-top: 1px solid #dee2e6;\n            font-size: 12px;\n            color: #6c757d;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"email-container\">\n        <div class=\"header\">\n            <h2>Meeting Summary</h2>\n            <div class=\"meeting-info\">\n                <strong>Subject:</strong> {{ $json.meeting_title }}<br>\n                <strong>Date:</strong> {{ new Date($json.timestamp).toLocaleDateString() }}<br>\n                <strong>To:</strong> {{ $json.recipient_email }}\n            </div>\n        </div>\n\n        <div class=\"greeting\">\n            Dear Team,<br><br>\n            Please find below the summary of our recent meeting along with action items and next steps.\n        </div>\n\n        <div class=\"section\">\n            <div class=\"section-title\">Meeting Summary</div>\n            <div class=\"summary-box\">\n                {{ $json.summary }}\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <div class=\"section-title\">Concerns and Issues</div>\n            \n            {{ Object.keys($json.concerns.by_category).map(category => \n                '<div class=\"concern-item\">' +\n                '<h4>' + category + '</h4>' +\n                '<ul>' + \n                $json.concerns.by_category[category].map(concern => '<li>' + concern + '</li>').join('') + \n                '</ul>' +\n                '</div>'\n            ).join('') }}\n        </div>\n\n        <div class=\"section\">\n            <div class=\"section-title\">Action Items</div>\n            \n            {{ $json.action_items.items.map(item => \n                '<div class=\"action-item' + (item.priority === 'High' ? ' high-priority' : '') + '\">' +\n                '<h4>' + item.task + '</h4>' +\n                (item.assignee ? '<p><span class=\"assignee\">Assignee:</span> ' + item.assignee + '</p>' : '') +\n                (item.deadline ? '<p><span class=\"deadline\">Deadline:</span> ' + item.deadline + '</p>' : '') +\n                (item.priority ? '<p><span class=\"priority\">Priority:</span> ' + item.priority + '</p>' : '') +\n                (item.context ? '<p><strong>Context:</strong> ' + item.context + '</p>' : '') +\n                '</div>'\n            ).join('') }}\n\n            {{ $json.action_items.follow_up_meetings ? \n                $json.action_items.follow_up_meetings.map(meeting => \n                    '<div class=\"follow-up\">' +\n                    '<h4>Follow-up Meeting: ' + meeting.purpose + '</h4>' +\n                    '<p><strong>Participants:</strong> ' + meeting.participants.join(', ') + '</p>' +\n                    '<p><strong>Timeline:</strong> ' + meeting.timeline + '</p>' +\n                    '</div>'\n                ).join('') : '' }}\n        </div>\n\n        {{ $json.action_items.decisions_requiring_action.length > 0 ? \n            '<div class=\"section\">' +\n            '<div class=\"section-title\">Key Decisions</div>' +\n            '<ul>' +\n            $json.action_items.decisions_requiring_action.map(decision => '<li>' + decision + '</li>').join('') +\n            '</ul>' +\n            '</div>' : '' }}\n\n        <div class=\"signature\">\n            <p>Please review your assigned action items and reach out if you have any questions.</p>\n            <p>Best regards<br>\n        </div>\n\n        <div class=\"footer\">\n            <p><strong>Processing Status:</strong> \n            Summary: {{ $json.processing_status.summary_success ? 'Completed' : 'Failed' }} | \n            Concerns: {{ $json.processing_status.concerns_success ? 'Completed' : 'Failed' }} | \n            Actions: {{ $json.processing_status.action_items_success ? 'Completed' : 'Failed' }}</p>\n        </div>\n    </div>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        2192,
        848
      ],
      "id": "284abf11-151a-4e98-9a67-1e1ec77bfcb4",
      "name": "Send Analysis Email",
      "webhookId": "ea0a925a-7e4c-4ca0-b6f4-f0c968858e13",
      "credentials": {
        "gmailOAuth2": {
          "id": "2Z3iyh3g5THKjaDd",
          "name": "Gmail account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## 📥 INPUT STAGE\n\n**Form Trigger Node**\n- Type: n8n-nodes-base.formTrigger\n- Version: 2.2\n- Purpose: Creates a web form for file upload\n\n**Setup Requirements:**\n- No credentials needed\n- Configure webhook ID: 'meeting-transcription-form'\n- Form accepts .txt files only\n- Requires email input for results\n\n**Features:**\n- File upload validation\n- Email validation\n- Optional meeting title field\n- Automatic webhook generation\n\n**Usage:** Users access form URL to upload meeting transcripts",
        "height": 640,
        "width": 352
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -496,
        464
      ],
      "typeVersion": 1,
      "id": "5641c517-4340-4bfe-b1ca-bc923a733334",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Meeting Analysis Prompt - JSON Output Required\nYou are an expert meeting analyst. Analyze the following meeting transcription and extract all concerns, issues, or problems raised by participants. Organize them by participant when possible and categorize by type.\nTRANSCRIPT:\n{{ $('Extract Transcription').item.json.transcription_text.base64Decode() }}\nCRITICAL OUTPUT REQUIREMENTS:\nYou MUST respond ONLY with a valid JSON object. Do not include any text, explanations, or formatting outside of the JSON structure.",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        800,
        624
      ],
      "id": "e9a16781-4c3f-4551-9b2c-57479ff7ed5d",
      "name": "Extract Concerns"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert project manager. Analyze the following meeting transcription and extract all action items, tasks, and commitments made during the meeting.\n\nTRANSCRIPT:\n{{ $('Extract Transcription').item.json.transcription_text.base64Decode() }}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        736,
        864
      ],
      "id": "3de3126b-94a3-4f86-ac7c-fc460a44ef02",
      "name": "Extract Action Items"
    },
    {
      "parameters": {
        "content": "## 🤖 AI PROCESSING PIPELINE\n\n### **Google Gemini Chat Model**\n- Type: @n8n/n8n-nodes-langchain.lmChatGoogleGemini\n- Version: 1.0\n- **SETUP REQUIRED:** Google PaLM API credentials\n- Credential ID: hkB6yKuaTIFf2FSl\n\n### **Summarization Chain**\n- Type: @n8n/n8n-nodes-langchain.chainSummarization\n- Version: 2.1\n- Purpose: Generates executive summary\n- Input: Binary data from transcription\n- Mode: nodeInputBinary\n\n### **LLM Chains (Concerns & Actions)**\n- Type: @n8n/n8n-nodes-langchain.chainLlm\n- Version: 1.7\n- Two parallel chains:\n  1. **Extract Concerns**: Identifies issues/problems\n  2. **Extract Action Items**: Finds tasks/commitments\n\n### **Structured Output Parsers**\n- Type: @n8n/n8n-nodes-langchain.outputParserStructured\n- Version: 1.3\n- Purpose: Enforces JSON schema output\n- Parser 1: Concerns categorization\n- Parser 2: Action items with assignees/deadlines\n\n### **Key Features:**\n- Parallel AI processing for speed\n- Structured data extraction\n- Error handling with continueRegularOutput\n- Schema-validated JSON responses",
        "height": 1104,
        "width": 768,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        368,
        32
      ],
      "typeVersion": 1,
      "id": "348c444d-9cc1-4aed-83c7-b313c17056ae",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## ⚙️ DATA PROCESSING & MERGE\n\n**Merge Node**\n- Type: n8n-nodes-base.merge\n- Version: 3.2\n- Inputs: 3 streams (Summary, Concerns, Actions)\n- Mode: Wait for all inputs\n- Execute once: false\n\n**Code Node - Structure Final Data**\n- Type: n8n-nodes-base.code\n- Version: 2.0\n- Language: JavaScript\n- Error handling: continueRegularOutput\n\n**Processing Logic:**\n- Combines AI analysis results\n- Parses JSON responses safely\n- Creates structured output format\n- Adds processing status tracking\n- Handles parsing errors gracefully\n\n**Output Structure:**\n- meeting_title (from form)\n- recipient_email (from form)\n- timestamp (ISO format)\n- summary (from AI)\n- concerns (categorized)\n- action_items (with metadata)\n- processing_status (success flags)\n\n**Error Handling:**\n- Try-catch for JSON parsing\n- Fallback error messages\n- Raw data preservation on failure",
        "height": 784,
        "width": 608,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1216,
        368
      ],
      "typeVersion": 1,
      "id": "5e9933e0-008c-4d12-ab97-9e6757fb2a52",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## 📧 EMAIL OUTPUT\n\n**Gmail Node**\n- Type: n8n-nodes-base.gmail\n- Version: 2.1\n- **SETUP REQUIRED:** Gmail OAuth2 credentials\n- Credential ID: RSgjq8n7ZJ3lr95k\n\n**Configuration:**\n- Dynamic recipient from form input\n- Subject: 'Meeting Analysis: {title}'\n- HTML formatted email\n- Error handling: continueRegularOutput\n\n**Email Features:**\n- Professional HTML template\n- Color-coded sections\n- Executive summary\n- Categorized concerns\n- Priority-marked action items\n- Processing status indicators\n- Responsive design\n\n**Template Sections:**\n- Header with meeting info\n- Executive summary\n- Concerns by category\n- Action items with priority\n- Follow-up meetings\n- Processing status\n\n**Setup Steps:**\n1. Create Gmail OAuth2 app\n2. Configure credentials in n8n\n3. Test email delivery\n4. Verify HTML rendering",
        "height": 800,
        "width": 656,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1872,
        384
      ],
      "typeVersion": 1,
      "id": "d911df77-39c5-45d1-9733-79b0e7f36655",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## 📄 DATA EXTRACTION\n\n**Extract From File Node**\n- Type: n8n-nodes-base.extractFromFile\n- Version: 1.0\n- Operation: binaryToPropery\n\n**Setup Configuration:**\n- Source: 'meeting_transcription' (from form)\n- Destination: 'transcription_text'\n- Options: keepSource = 'both'\n- Error handling: continueRegularOutput\n- Always output data: true\n\n**Purpose:**\n- Converts uploaded file to text\n- Extracts content from .txt files\n- Maintains original binary data\n- Base64 decoding for text processing\n\n**Supported Formats:**\n- Text files (.txt)\n- Preserves file encoding\n- Handles large transcriptions\n\n**Output:**\n- Text content in JSON property\n- Available for AI processing\n- Error-resistant extraction",
        "height": 784,
        "width": 432,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -112,
        320
      ],
      "typeVersion": 1,
      "id": "84fbd237-ae11-47f0-a443-61d23e906dbd",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"action_items\": {\n    \"items\": [\n      {\n        \"task\": \"Description of the task\",\n        \"assignee\": \"Person responsible (if mentioned)\",\n        \"deadline\": \"Due date (if mentioned)\",\n        \"priority\": \"High/Medium/Low (if indicated)\",\n        \"context\": \"Brief context about why this task is needed\"\n      }\n    ],\n    \"follow_up_meetings\": [\n      {\n        \"purpose\": \"Purpose of follow-up\",\n        \"participants\": [\"list of participants\"],\n        \"timeline\": \"When it should happen\"\n      }\n    ],\n    \"decisions_requiring_action\": [\"List of decisions that need implementation\"],\n    \"summary\": \"Brief summary of all action items and next steps\"\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        992,
        1008
      ],
      "id": "d8877b59-2627-470d-94b0-62c8f2ee2cbc",
      "name": "Structured Output Parser - Action Items"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"concerns\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"by_participant\": {\n          \"type\": \"object\",\n          \"patternProperties\": {\n            \"^.*$\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"additionalProperties\": false\n        },\n        \"by_category\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"Technical Issues\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"Process Issues\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"Resource Issues\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"Timeline Issues\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"Communication Issues\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            },\n            \"Other\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"additionalProperties\": false\n        }\n      },\n      \"required\": [\"by_participant\", \"by_category\"],\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\"concerns\"],\n  \"additionalProperties\": false\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1040,
        784
      ],
      "id": "47342166-4acd-47af-b767-23020d6b7e8e",
      "name": "Structured Output Parser- Action Items"
    }
  ],
  "pinData": {},
  "connections": {
    "On Form Submission": {
      "main": [
        [
          {
            "node": "Extract Transcription",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Transcription": {
      "main": [
        [
          {
            "node": "Generate Summary",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract Concerns",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract Action Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Summary": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Summary",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Extract Concerns",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Extract Action Items",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Merge Results": {
      "main": [
        [
          {
            "node": "Structure Final Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structure Final Data": {
      "main": [
        [
          {
            "node": "Send Analysis Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Concerns": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Extract Action Items": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Structured Output Parser - Action Items": {
      "ai_outputParser": [
        [
          {
            "node": "Extract Action Items",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser- Action Items": {
      "ai_outputParser": [
        [
          {
            "node": "Extract Concerns",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8b369ec8-1145-4cf7-bf5b-dec42839ce6c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "899396e891cc34e50afafd214dc6b5733cee3fbb2e8f9e0b39dfe1f4c7e2272a"
  },
  "id": "N0Oit9aaKbXp4C2t",
  "tags": []
}
