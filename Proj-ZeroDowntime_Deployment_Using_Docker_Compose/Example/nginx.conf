# Upstream not allowed in nginx.conf file

user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Server block for Frontend server
    server {
        listen 443 ssl;
        server_name fe.mycompany.com;

        ssl_certificate /etc/letsencrypt/live/fe.mycompany.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/fe.mycompany.com/privkey.pem;

        location / {
            proxy_pass http://frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
        }
    }

    # Server block for Backend server
    server {
        listen 443 ssl;
        server_name be.mycompany.com;

        ssl_certificate /etc/letsencrypt/live/be.mycompany.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/be.mycompany.com/privkey.pem;

        location / {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 200M;

            keepalive_timeout 600;
            send_timeout 600;
            client_body_timeout 600;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            fastcgi_connect_timeout 600;
            fastcgi_read_timeout 600;
            fastcgi_send_timeout 600;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name fe.mycompany.com be.mycompany.com;

        location / {
            return 301 https://$host$request_uri;
        }
    }
}
