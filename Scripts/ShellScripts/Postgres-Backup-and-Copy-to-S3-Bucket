#!/bin/bash

# Variables
DB_HOST=""
DB_NAME=""
DB_PORT=5432
DB_USER=""
DB_PASSWORD=""
S3_BUCKET="s3://my-bucket/postgres/"

# Generate timestamp
TIMESTAMP=$(date +"%Y_%m_%d__%H_%M_%S")  
BACKUP_FILE="mainapp_${DB_NAME}_dbbackup_utc_${TIMESTAMP}.sql"

# Set the PGPASSWORD environment variable for authentication
export PGPASSWORD=$DB_PASSWORD

# Perform the database backup and compress the output
pg_dump -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" "$DB_NAME" > "$BACKUP_FILE"

# Check if the backup was successful
if [ $? -eq 0 ]; then
    echo "Database backup successful: $BACKUP_FILE"
else
    echo "Database backup failed!" >&2
    exit 1
fi

# Copy backup file to s3 bucket
aws s3 cp "$BACKUP_FILE" "$S3_BUCKET"

# Check if the S3 upload was successful
if [ $? -eq 0 ]; then
    echo "Backup uploaded to S3: $S3_BUCKET"
else
    echo "Failed to upload backup to S3!" >&2
    exit 1
fi

# Delete the local backup file to save space
rm -f "$BACKUP_FILE"

# Confirm deletion
if [ $? -eq 0 ]; then
    echo "Local backup file deleted & script execution complete."
else
    echo "Failed to delete local backup file!" >&2
    exit 1
fi

# Unset the PGPASSWORD environment variable
unset PGPASSWORD
